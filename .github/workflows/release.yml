name: Auto Increment Release

on:
  push:
    branches:
      - 'release-main'
      - 'release-beta'
      - 'release-staging'
      - 'release-EV-196-CDN-deploy'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get Branch Name
        id: get_branch_name
        run: |
          # Extract branch name from GITHUB_REF
          branch_name=$(echo "${GITHUB_REF#refs/heads/}")
          echo "branch_name=${branch_name}" >> $GITHUB_ENV
          echo "Branch name: ${branch_name}"

      - name: Fetch Release Info
        id: get_release
        run: |
          # Fetch all tags
          git fetch --tags
          
          # Conditional logic for tag prefix
          branch_name=${{ env.branch_name }}
          if [ "$branch_name" = "release-main" ]; then
            tag_prefix="v"
          else
            tag_prefix="${branch_name}-"
          fi

          # Get branch-specific tags based on the prefix
          latest_tag=$(git tag --list "${tag_prefix}*" | sort -V | tail -n 1)
          
          if [ -z "$latest_tag" ]; then
            echo "No tags found for branch '${branch_name}', defaulting to ${tag_prefix}1.0.0"
            latest_tag="${tag_prefix}1.0.0"
          else
            echo "Latest tag found for branch '${branch_name}': $latest_tag"
          fi
          
          # Extract version number and increment patch version
          version=$(echo $latest_tag | sed 's/^.*v//' | awk -F. '{ printf("%d.%d.%d", $1, $2, $3+1) }')
          new_tag="${tag_prefix}${version}"
          echo "Next tag: $new_tag"
          echo "tag=${new_tag}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.tag }}
          release_name: ${{ env.tag }}
          body: |
            "A new release has been created for ${{ env.branch_name }}".
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}